---
title: API Reference - DirectionalLight(Light)
url: https://www.ursinaengine.org/api_reference.html#Ursina#DirectionalLight(Light)
scraped_at: Sun Dec 29 13:49:59 2024
---

# DirectionalLight(Light)

| .shadow_map_resolution= Vec2(1024, 1024) |  |
| --- | --- |
| .shadows = shadows |  |
| .shadows |  |
| --- | --- |
| update_bounds(entity=scene) | update the shadow area to fit the bounds of target entity, defaulted to scene. |
| --- | --- |
| look_at( target, axis='forward', up=None ) | up defaults to self.up |
fromursinaimportUrsina, EditorCamera, color, Vec3app = Ursina()
from ursina.shaders import lit_with_shadows_shader# you have to apply this shader to enties for them to receive shadows.EditorCamera()Entity(model='plane',scale=10,color=color.gray,shader=lit_with_shadows_shader)Entity(model='cube',y=1,shader=lit_with_shadows_shader,color=color.light_gray)
light =DirectionalLight(shadows=True)
light.look_at(Vec3(1,-1,1))

dont_cast_shadow =Entity(model='cube',y=1,shader=lit_with_shadows_shader, x=2,color=color.light_gray)
dont_cast_shadow.hide(0b0001)

unlit_entity =Entity(model='cube',y=1,x=-2, unlit=True,color=color.light_gray)

bar =Entity(model='cube',position=(0,3,-2),shader=lit_with_shadows_shader,scale=(10,.2,.2),color=color.light_gray)

app.run()

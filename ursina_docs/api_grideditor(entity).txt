---
title: API Reference - GridEditor(Entity)
url: https://www.ursinaengine.org/api_reference.html#Ursina#GridEditor(Entity)
scraped_at: Sun Dec 29 13:49:59 2024
---

# GridEditor(Entity)

| .w, self.h= int(size[0]), int(size[1]) |  |
| --- | --- |
| .canvas = Entity(parent=self, model='quad', origin=(-.5,-.5), shader=unlit_shader, scale=(self.w/self.h, 1), color=canvas_color) |  |
| .canvas_collider = Entity(parent=self.canvas, model='wireframe_quad', origin=self.canvas.origin, color=color.blue, scale=2, position=(-.5,-.5), collider='box', visible=False) |  |
| .brush_size = 1 |  |
| .auto_render = True |  |
| .cursor = Entity(parent=self.canvas, model=Quad(segments=0, mode='line', thickness=2), origin=(-.5,-.5), scale=(1/self.w, 1/self.h), color=color.hsv(120,1,1,.5), z=-.2, shader=unlit_shader) |  |
| .selected_char = palette[1] |  |
| .palette = palette |  |
| .start_pos = None |  |
| .prev_draw = None |  |
| .lock_axis = None |  |
| .outline = Entity(parent=self.canvas, model=Quad(segments=0, mode='line', thickness=2), color=color.cyan, z=.01, origin=(-.5,-.5)) |  |
| .rect_selection = [Vec2(0,0), Vec2(0,0)] |  |
| .selection_renderer = Entity(parent=self.canvas, model=Mesh(mode='line', thickness=2), color=color.lime, alpha=.5, z=-.01, origin=(-.5,-.5), scale=(1/self.w,1/self.h)) |  |
| .rect_tool = Entity(parent=self.canvas, model=Quad(0, mode='line', thickness=2), color=color.lime, z=-.01, origin=(-.5,-.5), start=Vec2(0,0), end=Vec2(0,0)) |  |
| .selection_matrix = [[0 for y in range(self.h)] for x in range(self.w)] |  |
| .temp_paste_layer = Entity(parent=self.cursor, model='quad', origin=(-.5,-.5), z=-.02, enabled=False) |  |
| .is_in_paste_mode = False |  |
| .undo_stack = [] |  |
| .undo_index = 0 |  |
| .help_icon = Button(parent=self.canvas, scale=.025, model='circle', origin=(-.5,-.5), position=(-.0,1.005,-1), text='?', target_scale=.025) |  |
| .edit_mode = edit_mode |  |
| .palette |  |
| --- | --- |
| .edit_mode |  |
| update() |  |
| --- | --- |
| get_cursor_position() |  |
| draw( x, y ) |  |
| input( key ) |  |
| record_undo() |  |
| floodfill( matrix, x, y, first=True ) |  |
| copy() |  |
| enter_paste_mode() |  |
| exit_paste_mode( discard=False ) |  |
| clear_selection() |  |
| render_selection() |  |
app = Ursina(borderless=False)'''
pixel editor example, it's basically a drawing tool.
can be useful for level editors and such
here we create a new texture, but can also give it an existing texture to modify.'''fromPILimportImage
t = Texture(Image.new(mode='RGBA', size=(32,32),color=(0,0,0,1)))fromursina.prefabs.grid_editorimportPixelEditor
editor = PixelEditor(parent=scene,texture=load_texture('brick'),scale=10)

camera.orthographic = True
camera.fov =15EditorCamera(rotation_speed=0)fromursina.prefabs.grid_editorimportASCIIEditor
ASCIIEditor(x=0,scale=.1)

app.run()

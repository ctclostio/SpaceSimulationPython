---
title: API Reference - CubicBezier
url: https://www.ursinaengine.org/api_reference.html#Ursina#CubicBezier
scraped_at: Sun Dec 29 13:49:59 2024
---

# CubicBezier

| .a= a |  |
| --- | --- |
| .b = b |  |
| .c = c |  |
| .d = d |  |
| .cx = 3.0 * a |  |
| .bx = 3.0 * (c - a) - self.cx |  |
| .ax = 1.0 - self.cx - self.bx |  |
| .cy = 3.0 * b |  |
| .by = 3.0 * (d - b) - self.cy |  |
| .ay = 1.0 - self.cy - self.by |  |
| sample_curve_x(t) |  |
| --- | --- |
| sample_curve_y( t ) |  |
| sample_curve_derivative_x( t ) |  |
| calculate( x, epsilon=.0001 ) |  |
| solve_curve_x( t, epsilon=.0001 ) |  |
'''Draws a sheet with every curve and its name'''fromursinaimport*fromursinaimportUrsina, camera, window, curve,Entity, Mesh, Text, color

app = Ursina()
camera.orthographic = True
camera.fov =16camera.position = (9,6)
window.color = color.blackdefrender_curve(curve_function, name):
    curve_renderer =Entity(model=Mesh(vertices=[Vec3(i /31, curve_function(i /31),0)fori inrange(32)],mode='line',thickness=2),color=color.light_gray)
    label = Text(parent=curve_renderer,text=name,scale=8,color=color.gray,y=-.1)
    return curve_renderer




c =CubicBezier(0, .5,1, .5)print('-----------', c.calculate(.23))

window.exit_button.visible = False
window.fps_counter.enabled = False

custom_curve = combine(linear, reverse(in_expo), .25)
render_curve(custom_curve,'custom_curve')
EditorCamera()
app.run()'''
These are used by Entity when animating, like this:

e = Entity()
e.animate_y(1, curve=curve.in_expo)

e2 = Entity(x=1.5)
e2.animate_y(1, curve=curve.CubicBezier(0,.7,1,.3))'''
